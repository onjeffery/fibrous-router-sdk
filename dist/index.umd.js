!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((t||self).routerSdk={})}(this,function(t){function r(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function e(t,e){var n="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(n)return(n=n.call(t)).next.bind(n);if(Array.isArray(t)||(n=function(t,e){if(t){if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){n&&(t=n);var o=0;return function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var n;!function(t){t.UniswapV2="UniswapV2",t.UniswapV3="UniswapV3"}(n||(n={}));var o=function(t){return Number(t.replace("%",""))};t.Router=/*#__PURE__*/function(){function t(t){this.url=void 0,this.url=t}var r=t.prototype;return r.route=function(t){try{return Promise.resolve(function(t,r){try{var e=t+"?"+Object.keys(r).map(function(t){return t+"="+r[t]}).join("&");return Promise.resolve(fetch(e)).then(function(t){return t.json()})}catch(t){return Promise.reject(t)}}(this.url,t))}catch(t){return Promise.reject(t)}},r.tokenList=function(){try{return Promise.resolve(fetch(this.url+"/tokens")).then(function(t){if(t.ok)return t.json();throw new Error(t.statusText)})}catch(t){return Promise.reject(t)}},r.buildTransaction=function(t){var r=function(t,r,n){for(var i,u=Math.pow(10,6),a=[],s=100,c=e(t.route);!(i=c()).done;){var f=i.value,l=o(f.percent),d=l/s;s-=l;for(var p=0;p<f.swaps.length;p++)for(var h,m=0==p?d:1,v=100,y=e(f.swaps[p]);!(h=y()).done;){var g=h.value,b=o(g.percent),A=b/v*m;v-=b,a.push([g.fromTokenAddress,g.toTokenAddress,(w=A,String(Math.floor(1e6*Number(w.toFixed(4))))),String(g.protocol),g.poolAddress])}}var w,j=BigInt(t.outputAmount)*BigInt((1-r)*u)/BigInt(u);return[String(a.length)].concat(a.flat(),[t.inputToken.address,t.outputToken.address,t.inputAmount,"0",String(j),"0",n])}(t.route,t.slippage,t.accountAddress);return{contractAddress:t.routerAddress,entryPoint:"swap",call_data:r}},t}()});
