import{uint256 as t}from"starknet";const e=(t,e)=>`${t}?${Object.keys(e).map(t=>`${t}=${e[t]}`).join("&")}`,s=t=>{const e={};return null!=t&&(e["X-API-Key"]=t),e},n=t=>Number(t.replace("%","")),o=t=>String(Math.floor(1e6*Number(t.toFixed(4))));function r(e,s,r){const i=10**6,a=e=>{const s=t.bnToUint256(e);return[s.low,s.high]},c=[];let u=100;for(const t of e.route){const e=n(t.percent),s=e/u;u-=e;for(let e=0;e<t.swaps.length;e++){const r=t.swaps[e];let i=0==e?s:1,a=100;for(const t of r){const e=n(t.percent),s=e/a*i;a-=e,c.push([t.fromTokenAddress,t.toTokenAddress,o(s),String(t.protocol),t.poolAddress])}}}const l=BigInt(e.outputAmount)*BigInt((1-s)*i)/BigInt(i);return[String(c.length),...c.flat(),e.inputToken.address,e.outputToken.address,...a(e.inputAmount),...a(l),r]}class i{constructor(t,e){var s;this.DEFAULT_API_URL="https://api.fibrous.finance",this.ROUTER_ADDRESS="0x1b23ed400b210766111ba5b1e63e33922c6ba0c45e6ad56ce112e5f4c578e62",t&&t.endsWith("/")&&(t=t.substring(0,t.length-1)),this.apiUrl=null!=(s=t)?s:this.DEFAULT_API_URL,this.apiKey=null!=e?e:null}async getBestRoute(t,n,o,r){const i={amount:t,tokenInAddress:n,tokenOutAddress:o};for(const[t,e]of Object.entries(null!=r?r:{}))"excludeProtocols"!=t?i[t]=e:i.excludeProtocols=e.join(",");const a=e(`${this.apiUrl}/route`,i);return await fetch(a,{headers:s(this.apiKey)}).then(t=>t.json())}async supportedTokens(){return(await fetch(`${this.apiUrl}/tokens`,{headers:s(this.apiKey)}).then(t=>t.json())).reduce((t,e)=>Object.assign(t,{[e.symbol]:e}),{})}async supportedProtocols(){return(await fetch(`${this.apiUrl}/protocols`,{headers:s(this.apiKey)}).then(t=>t.json())).reduce((t,e,s)=>Object.assign(t,{[e]:s+1}),{})}buildTransaction(t,e,s){return{contractAddress:this.ROUTER_ADDRESS,entryPoint:"swap",call_data:r(t,e,s)}}}const a={mySwap:1,JediSwap:2,"10K Swap":3,SithSwap:4};export{a as Protocols,i as Router,s as buildHeaders,e as buildRouteUrl,r as buildSwapCalldata,o as parsePercent,n as trimPercent};
